//
// ContactsAPIAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire



public class ContactsAPIAPI: APIBase {
    /**

     - parameter contactId: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func getContact(contactId contactId: Int64, completion: ((data: Contact?, error: ErrorType?) -> Void)) {
        getContactWithRequestBuilder(contactId: contactId).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /Contacts/{contactId}
     - 
     - BASIC:
       - type: basic
       - name: basic
     - examples: [{contentType=application/json, example={
  "Email" : "aeiou",
  "Phone" : "aeiou",
  "Id" : 1234567891234567,
  "JobTitle" : "aeiou",
  "Name" : "aeiou"
}}]
     
     - parameter contactId: (path)  

     - returns: RequestBuilder<Contact> 
     */
    public class func getContactWithRequestBuilder(contactId contactId: Int64) -> RequestBuilder<Contact> {
        var path = "/Contacts/{contactId}"
        path = path.stringByReplacingOccurrencesOfString("{ContactId}", withString: "\(contactId)", options: .LiteralSearch, range: nil)
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [:]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<Contact>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: true)
    }

    /**

     - parameter name: (query)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    public class func searchContacts(name name: String, completion: ((data: [Contact]?, error: ErrorType?) -> Void)) {
        searchContactsWithRequestBuilder(name: name).execute { (response, error) -> Void in
            completion(data: response?.body, error: error);
        }
    }


    /**
     - GET /Contacts
     - 
     - BASIC:
       - type: basic
       - name: basic
     - examples: [{contentType=application/json, example=[ {
  "Email" : "aeiou",
  "Phone" : "aeiou",
  "Id" : 1234567891234567,
  "JobTitle" : "aeiou",
  "Name" : "aeiou"
} ]}]
     
     - parameter name: (query)  

     - returns: RequestBuilder<[Contact]> 
     */
    public class func searchContactsWithRequestBuilder(name name: String) -> RequestBuilder<[Contact]> {
        let path = "/Contacts"
        let URLString = SwaggerClientAPI.basePath + path

        let nillableParameters: [String:AnyObject?] = [
            "Name": name
        ]
 
        let parameters = APIHelper.rejectNil(nillableParameters)
 
        let convertedParameters = APIHelper.convertBoolToString(parameters)
 
        let requestBuilder: RequestBuilder<[Contact]>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: URLString, parameters: convertedParameters, isBody: false)
    }

}
